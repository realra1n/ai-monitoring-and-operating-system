services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: oneservice
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../scripts/init.sql:/docker-entrypoint-initdb.d/10-init.sql:ro

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - minio:/data

  minio-setup:
    image: minio/mc:latest
    depends_on: [minio]
    entrypoint: ["/bin/sh", "-c"]
    command: >
      mc alias set local http://minio:9000 minio minio123 &&
      mc mb -p local/thanos || true &&
      mc mb -p local/artifacts || true

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ports: ["9200:9200"]
    ulimits:
      memlock:
        soft: -1
        hard: -1

  grafana:
    image: grafana/grafana:10.2.3
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
    ports: ["3000:3000"]
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  prometheus:
    image: prom/prometheus:v2.51.2
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - promdata:/prometheus
      - promfilesd:/etc/prometheus/file_sd
    ports: ["9090:9090"]

  thanos-sidecar:
    image: quay.io/thanos/thanos:v0.34.0
    command: sidecar --tsdb.path=/prometheus --prometheus.url=http://prometheus:9090 --objstore.config-file=/etc/thanos/objstore.yml
    volumes:
      - promdata:/prometheus
      - ./thanos/objstore.yml:/etc/thanos/objstore.yml
    depends_on: [prometheus, minio]

  thanos-query:
    image: quay.io/thanos/thanos:v0.34.0
    command: query --http-address=0.0.0.0:10902 --store=thanos-sidecar:10901
    ports: ["10902:10902"]
    depends_on: [thanos-sidecar]

  jaeger:
    image: jaegertracing/all-in-one:1.54
    ports:
      - "16686:16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  otel-collector:
    image: otel/opentelemetry-collector:0.104.0
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./otel/config.yaml:/etc/otelcol/config.yaml
    depends_on: [jaeger]

  oneservice-backend:
    build: ../backend
    environment:
      GRAFANA_URL: http://grafana:3000
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_BUCKET: artifacts
      NODE_EXPORTER_PORT: "9100"
    depends_on: [postgres, minio, opensearch, grafana, prometheus, thanos-query, jaeger, otel-collector]
    ports: ["8000:8000"]
    volumes:
      - promfilesd:/etc/prometheus/file_sd

  oneservice-frontend:
    build: ../frontend
    depends_on: [oneservice-backend, grafana]
    ports: ["8080:80"]
    environment:
      NODE_EXPORTER_PORT: "9100"

  mnist-test:
    platform: linux/arm64
    build:
      context: ../test
      dockerfile: backend/Dockerfile
    ports: ["8001:8001"]

volumes:
  pgdata:
  minio:
  promdata:
  promfilesd:
